{"ast":null,"code":"import _slicedToArray from \"/Users/user/react-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/user/react-starter/src/features/components/drawer/drawer.component.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { MenuItem, ExpansionPanel, ListItemText, ListItem, List, ExpansionPanelSummary } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport { ROUTES } from '../../../common/constants';\nimport LogoComponent from '../logo/logo.component.jsx';\nimport { StyledDrawer, WrapperRtl, Wrapper, Logo } from './styles';\n\nconst DrawerComponent = ({\n  closeDrawer,\n  open,\n  languages,\n  language,\n  onChangeLanguage,\n  isRtl\n}) => {\n  const _useTranslation = useTranslation(),\n        _useTranslation2 = _slicedToArray(_useTranslation, 1),\n        t = _useTranslation2[0];\n\n  const Container = isRtl ? WrapperRtl : Wrapper;\n  return React.createElement(StyledDrawer, {\n    open: open,\n    variant: \"temporary\",\n    anchor: isRtl ? 'right' : 'left',\n    onClose: closeDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(LogoComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(DrawerLink, {\n    to: ROUTES.home,\n    icon: React.createElement(HomeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }),\n    label: t('HOME_PAGE'),\n    closeDrawer: closeDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(DrawerLink, {\n    to: ROUTES.about,\n    icon: React.createElement(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }),\n    label: t('ABOUT_PAGE'),\n    closeDrawer: closeDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(DrawerLink, {\n    to: ROUTES.shit,\n    icon: React.createElement(ArrowForwardIosIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }),\n    label: t('SHIT_PAGE'),\n    closeDrawer: closeDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(DrawerLink, {\n    to: ROUTES.super,\n    icon: React.createElement(ArrowForwardIosIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }),\n    label: t('SUPER_PAGE'),\n    closeDrawer: closeDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(ExpansionPanel, {\n    style: {\n      margin: 0,\n      background: 'inherit'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(ExpansionPanelSummary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, t('LANGUAGES')), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, Object.keys(languages).map(l => React.createElement(ListItem, {\n    key: l,\n    button: true,\n    className: language === languages[l] ? 'selected' : null,\n    onClick: () => onChangeLanguage(languages[l]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: l,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })))))));\n};\n\nconst DrawerLink = ({\n  closeDrawer,\n  iconSrc,\n  label,\n  to,\n  icon\n}) => React.createElement(NavLink, {\n  activeClassName: \"active\",\n  to: to,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, React.createElement(MenuItem, {\n  onClick: () => closeDrawer(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, icon, !icon && iconSrc && React.createElement(\"img\", {\n  src: iconSrc,\n  alt: \"\".concat(label, \" link\"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, label)));\n\nDrawerLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  iconSrc: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.string.isRequired,\n  closeDrawer: PropTypes.func.isRequired\n};\nDrawerLink.defaultProps = {\n  iconSrc: null,\n  icon: null\n};\nDrawerComponent.propTypes = {\n  open: PropTypes.bool.isRequired,\n  closeDrawer: PropTypes.func.isRequired,\n  onChangeLanguage: PropTypes.func.isRequired,\n  languages: PropTypes.shape({\n    [PropTypes.string]: PropTypes.string\n  }).isRequired,\n  language: PropTypes.string.isRequired,\n  isRtl: PropTypes.bool.isRequired\n};\nexport default DrawerComponent;","map":{"version":3,"sources":["/Users/user/react-starter/src/features/components/drawer/drawer.component.jsx"],"names":["React","PropTypes","useTranslation","HomeIcon","DashboardIcon","ArrowForwardIosIcon","MenuItem","ExpansionPanel","ListItemText","ListItem","List","ExpansionPanelSummary","NavLink","ROUTES","LogoComponent","StyledDrawer","WrapperRtl","Wrapper","Logo","DrawerComponent","closeDrawer","open","languages","language","onChangeLanguage","isRtl","t","Container","home","about","shit","super","margin","background","Object","keys","map","l","DrawerLink","iconSrc","label","to","icon","propTypes","string","isRequired","element","func","defaultProps","bool","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';import {\n  MenuItem,\n  ExpansionPanel,\n  ListItemText,\n  ListItem,\n  List,\n  ExpansionPanelSummary\n} from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport { ROUTES } from '../../../common/constants';\nimport LogoComponent from '../logo/logo.component.jsx';\nimport {\n  StyledDrawer,\n  WrapperRtl,\n  Wrapper,\n  Logo\n} from './styles';\n\nconst DrawerComponent = ({\n  closeDrawer,\n  open,\n  languages,\n  language,\n  onChangeLanguage,\n  isRtl\n}) => {\n  const [t] = useTranslation();\n  const Container = isRtl ? WrapperRtl : Wrapper;\n  return (\n    <StyledDrawer\n      open={open}\n      variant=\"temporary\"\n      anchor={isRtl ? 'right' : 'left'}\n      onClose={closeDrawer}\n    >\n      <Container>\n\n        <Logo><LogoComponent /></Logo>\n\n        <DrawerLink\n          to={ROUTES.home}\n          icon={<HomeIcon />}\n          label={t('HOME_PAGE')}\n          closeDrawer={closeDrawer}\n        />\n\n        <DrawerLink\n          to={ROUTES.about}\n          icon={<DashboardIcon />}\n          label={t('ABOUT_PAGE')}\n          closeDrawer={closeDrawer}\n        />\n        <DrawerLink\n          to={ROUTES.shit}\n          icon={<ArrowForwardIosIcon/>}\n          label={t('SHIT_PAGE')}\n          closeDrawer={closeDrawer}\n        />\n        <DrawerLink\n          to={ROUTES.super}\n          icon={<ArrowForwardIosIcon/>}\n          label={t('SUPER_PAGE')}\n          closeDrawer={closeDrawer}\n        />\n\n        {/* Language Switcher */}\n        <ExpansionPanel style={{ margin: 0, background: 'inherit' }}>\n          <ExpansionPanelSummary>{t('LANGUAGES')}</ExpansionPanelSummary>\n          <List>\n            {\n              Object.keys(languages).map(l => (\n                <ListItem\n                  key={l}\n                  button\n                  className={language === languages[l] ? 'selected' : null}\n                  onClick={() => onChangeLanguage(languages[l])}\n                >\n                  <ListItemText primary={l} />\n                </ListItem>\n              ))\n            }\n          </List>\n        </ExpansionPanel>\n\n      </Container>\n    </StyledDrawer>\n  );\n};\n\nconst DrawerLink = ({\n  closeDrawer, iconSrc, label, to, icon\n}) => (\n  <NavLink\n    activeClassName=\"active\"\n    to={to}\n  >\n    <MenuItem onClick={() => closeDrawer()}>\n      { icon }\n      { !icon && iconSrc && <img src={iconSrc} alt={`${label} link`} /> }\n      <span>{label}</span>\n    </MenuItem>\n  </NavLink>\n);\n\nDrawerLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  iconSrc: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.string.isRequired,\n  closeDrawer: PropTypes.func.isRequired\n};\n\nDrawerLink.defaultProps = {\n  iconSrc: null,\n  icon: null\n};\n\nDrawerComponent.propTypes = {\n  open: PropTypes.bool.isRequired,\n  closeDrawer: PropTypes.func.isRequired,\n  onChangeLanguage: PropTypes.func.isRequired,\n  languages: PropTypes.shape({ [PropTypes.string]: PropTypes.string }).isRequired,\n  language: PropTypes.string.isRequired,\n  isRtl: PropTypes.bool.isRequired\n};\n\nexport default DrawerComponent;\n"]},"metadata":{},"sourceType":"module"}