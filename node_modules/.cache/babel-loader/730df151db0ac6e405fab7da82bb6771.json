{"ast":null,"code":"import fetch from 'isomorphic-fetch';\n\nclass HttpService {\n  fetch(options) {\n    const url = options.url,\n          method = options.method,\n          body = options.body;\n    const headers = new Headers();\n\n    if (options.contentType) {\n      headers.append('Content-Type', options.contentType);\n    }\n\n    return fetch(url, {\n      method,\n      headers,\n      credentials: 'same-origin',\n      body\n    }).then(res => {\n      // handle success\n      if (res.ok) {\n        return res.text().then(text => {\n          if (text && this.isValidJsonString(text)) {\n            return JSON.parse(text);\n          }\n\n          return text;\n        });\n      } // handle error\n\n\n      return res.text().then(text => {\n        if (text && this.isValidJsonString(text)) {\n          throw new Error(JSON.parse(text));\n        } // throw new Error(text);\n\n      });\n    });\n  }\n\n  isValidJsonString(string) {\n    /* eslint-disable */\n    return /^[\\],:{}\\s]*$/.test(string.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''));\n    /* eslint-disable */\n  }\n\n}\n\nexport default new HttpService();","map":{"version":3,"sources":["/Users/user/react-starter/src/common/services/http.service.js"],"names":["fetch","HttpService","options","url","method","body","headers","Headers","contentType","append","credentials","then","res","ok","text","isValidJsonString","JSON","parse","Error","string","test","replace"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,WAAN,CAAkB;AAChBD,EAAAA,KAAK,CAAEE,OAAF,EAAW;AAAA,UACNC,GADM,GACgBD,OADhB,CACNC,GADM;AAAA,UACDC,MADC,GACgBF,OADhB,CACDE,MADC;AAAA,UACOC,IADP,GACgBH,OADhB,CACOG,IADP;AAEd,UAAMC,OAAO,GAAG,IAAIC,OAAJ,EAAhB;;AAEA,QAAIL,OAAO,CAACM,WAAZ,EAAyB;AACvBF,MAAAA,OAAO,CAACG,MAAR,CAAe,cAAf,EAA+BP,OAAO,CAACM,WAAvC;AACD;;AAED,WAAOR,KAAK,CAACG,GAAD,EAAM;AAChBC,MAAAA,MADgB;AAEhBE,MAAAA,OAFgB;AAGhBI,MAAAA,WAAW,EAAE,aAHG;AAIhBL,MAAAA;AAJgB,KAAN,CAAL,CAKJM,IALI,CAKEC,GAAD,IAAS;AACf;AACA,UAAIA,GAAG,CAACC,EAAR,EAAY;AACV,eAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBG,IAAD,IAAU;AAC/B,cAAIA,IAAI,IAAI,KAAKC,iBAAL,CAAuBD,IAAvB,CAAZ,EAA0C;AACxC,mBAAOE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACD;;AACD,iBAAOA,IAAP;AACD,SALM,CAAP;AAMD,OATc,CAUf;;;AACA,aAAOF,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBG,IAAD,IAAU;AAC/B,YAAIA,IAAI,IAAI,KAAKC,iBAAL,CAAuBD,IAAvB,CAAZ,EAA0C;AACxC,gBAAM,IAAII,KAAJ,CAAUF,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAV,CAAN;AACD,SAH8B,CAI/B;;AACD,OALM,CAAP;AAMD,KAtBM,CAAP;AAuBD;;AAEDC,EAAAA,iBAAiB,CAAEI,MAAF,EAAU;AACzB;AACA,WAAO,gBAAgBC,IAAhB,CAAqBD,MAAM,CAACE,OAAP,CAAe,kBAAf,EAAmC,GAAnC,EACzBA,OADyB,CACjB,kEADiB,EACmD,GADnD,EAEzBA,OAFyB,CAEjB,sBAFiB,EAEO,EAFP,CAArB,CAAP;AAGA;AACD;;AAxCe;;AA2ClB,eAAe,IAAIpB,WAAJ,EAAf","sourcesContent":["import fetch from 'isomorphic-fetch';\n\nclass HttpService {\n  fetch (options) {\n    const { url, method, body } = options;\n    const headers = new Headers();\n\n    if (options.contentType) {\n      headers.append('Content-Type', options.contentType);\n    }\n\n    return fetch(url, {\n      method,\n      headers,\n      credentials: 'same-origin',\n      body\n    }).then((res) => {\n      // handle success\n      if (res.ok) {\n        return res.text().then((text) => {\n          if (text && this.isValidJsonString(text)) {\n            return JSON.parse(text);\n          }\n          return text;\n        });\n      }\n      // handle error\n      return res.text().then((text) => {\n        if (text && this.isValidJsonString(text)) {\n          throw new Error(JSON.parse(text));\n        }\n        // throw new Error(text);\n      });\n    });\n  }\n\n  isValidJsonString (string) {\n    /* eslint-disable */\n    return /^[\\],:{}\\s]*$/.test(string.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@')\n      .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\n      .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''));\n    /* eslint-disable */\n  }\n}\n\nexport default new HttpService();\n"]},"metadata":{},"sourceType":"module"}