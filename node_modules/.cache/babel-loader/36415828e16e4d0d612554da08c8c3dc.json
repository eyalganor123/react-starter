{"ast":null,"code":"var _jsxFileName = \"/Users/user/react-starter/src/main.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport Routes from './routes.jsx';\nimport rootReducer from './common/reducers';\nimport * as serviceWorker from './serviceWorker';\nlet middlewares;\n\nif (process.env.NODE_ENV === 'production') {\n  serviceWorker.register();\n  middlewares = applyMiddleware(thunk);\n} else {\n  middlewares = applyMiddleware(thunk, logger);\n}\n\nconst store = createStore(rootReducer, middlewares);\nReactDOM.render(React.createElement(Routes, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/user/react-starter/src/main.jsx"],"names":["React","ReactDOM","createStore","applyMiddleware","thunk","logger","Routes","rootReducer","serviceWorker","middlewares","process","env","NODE_ENV","register","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,IAAIC,WAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCJ,EAAAA,aAAa,CAACK,QAAd;AACAJ,EAAAA,WAAW,GAAGN,eAAe,CAACC,KAAD,CAA7B;AACD,CAHD,MAGO;AACLK,EAAAA,WAAW,GAAGN,eAAe,CAACC,KAAD,EAAQC,MAAR,CAA7B;AACD;;AAED,MAAMS,KAAK,GAAGZ,WAAW,CAACK,WAAD,EAAcE,WAAd,CAAzB;AAEAR,QAAQ,CAACc,MAAT,CACE,oBAAC,MAAD;AAAQ,EAAA,KAAK,EAAED,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport Routes from './routes.jsx';\nimport rootReducer from './common/reducers';\n\nimport * as serviceWorker from './serviceWorker';\n\nlet middlewares;\n\nif (process.env.NODE_ENV === 'production') {\n  serviceWorker.register();\n  middlewares = applyMiddleware(thunk);\n} else {\n  middlewares = applyMiddleware(thunk, logger);\n}\n\nconst store = createStore(rootReducer, middlewares);\n\nReactDOM.render(\n  <Routes store={store} />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}